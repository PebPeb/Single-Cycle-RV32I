=================
2. Design Chooses
=================

This chapter plans to cover the design chooses of the CPU. There are many different variables to take into account when approaching this project. I hope to explain why I made my decisions, and the attended outcome of the design.

--------------
2.1 Why RISC-V
--------------

Why RISC-V? 

^^^^^^^^^^^^^^^^^^^^
2.1.1 RISC Over CISC
^^^^^^^^^^^^^^^^^^^^
A reduced instruction set computer or RISC for short is a computer that is designed to take a simplified set of individual instruction rather than a large set of instructions. Opting for more code in some cases to accomplish a task rather than having a specific instruction for that task. This leads to vastly more simple ISAs with RISC-V only having 47 instructions apart of the base 32-bit integer extension.

Before talking about why selecting a RISC ISA for this project we need to talk about the alternative option. A complex instruction set computer or CISC for short is a computer that is designed to minimize the number of instructions required to perform a task. This leads to a more robust ISA that includes more highly specific instructions, just the original x86 processor itself had about 117 instructions. Since the first x86 the instruction set has grown significantly adding over a few hundred instruction to the instruction set.


^^^^^^^^^^^^^^^^^
2.1.2 Open Source
^^^^^^^^^^^^^^^^^


---------------------
2.2 Microarchitecture
---------------------

^^^^^^^^^^^^^^^^^^
2.2.1 Single Cycle
^^^^^^^^^^^^^^^^^^

The data path is very directional. I find this a lot easier to understanding than a cpu that shares a bus on different cycles. 

Easier to upgrade to pipeline or multicycle


.. figure:: ../assets/Single_Cycle_RV32I_v0.0.3.png

    RISC-V Single Cycle Datapath